 @misc{chen_2019, title={You can't stop robocalls. you shouldn't have to.}, url={https://www.nytimes.com/2019/04/24/technology/personaltech/stop-robocalls.html}, journal={The New York Times}, publisher={The New York Times}, author={Chen, Brian X.}, year={2019}, month={Apr}} 
 @misc{greenberg_2015, title={OPM now admits 5.6m feds' fingerprints were stolen by hackers}, url={https://www.wired.com/2015/09/opm-now-admits-5-6m-feds-fingerprints-stolen-hackers/}, journal={Wired}, publisher={Conde Nast}, author={Greenberg, Andy}, year={2015}, month={Sep}} 
 @misc{newman_2019, title={The worst hacks of the decade}, url={https://www.wired.com/story/worst-hacks-of-the-decade/}, journal={Wired}, publisher={Conde Nast}, author={Newman, Lily Hay}, year={2019}, month={Dec}} 
 @misc{reuters_2018, title={Malicious cyber activity cost U.S. up to \$109 billion in 2016: White House Report}, url={https://www.reuters.com/article/us-usa-trump-cyber/malicious-cyber-activity-cost-u-s-up-to-109-billion-in-2016-white-house-report-idUSKCN1G01XV}, journal={Reuters}, publisher={Thomson Reuters}, year={2018}, month={Feb}} 
 
@inproceedings{hooi_fraudar_2016,
	address = {San Francisco California USA},
	title = {{FRAUDAR}: {Bounding} {Graph} {Fraud} in the {Face} of {Camouflage}},
	isbn = {978-1-4503-4232-2},
	shorttitle = {{FRAUDAR}},
	url = {https://dl.acm.org/doi/10.1145/2939672.2939747},
	doi = {10.1145/2939672.2939747},
	language = {en},
	urldate = {2021-05-13},
	booktitle = {Proceedings of the 22nd {ACM} {SIGKDD} {International} {Conference} on {Knowledge} {Discovery} and {Data} {Mining}},
	publisher = {ACM},
	author = {Hooi, Bryan and Song, Hyun Ah and Beutel, Alex and Shah, Neil and Shin, Kijung and Faloutsos, Christos},
	month = aug,
	year = {2016},
	pages = {895--904},
	file = {Hooi et al. - 2016 - FRAUDAR Bounding Graph Fraud in the Face of Camou.pdf:/Users/saranyav/Zotero/storage/VTYPQXFJ/Hooi et al. - 2016 - FRAUDAR Bounding Graph Fraud in the Face of Camou.pdf:application/pdf},
}


@article{leskovec_kronecker_2009,
	title = {Kronecker {Graphs}: {An} {Approach} to {Modeling} {Networks}},
	shorttitle = {Kronecker {Graphs}},
	url = {http://arxiv.org/abs/0812.4905},
	abstract = {How can we model networks with a mathematically tractable model that allows for rigorous analysis of network properties? Networks exhibit a long list of surprising properties: heavy tails for the degree distribution; small diameters; and densification and shrinking diameters over time. Most present network models either fail to match several of the above properties, are complicated to analyze mathematically, or both. In this paper we propose a generative model for networks that is both mathematically tractable and can generate networks that have the above mentioned properties. Our main idea is to use the Kronecker product to generate graphs that we refer to as "Kronecker graphs". First, we prove that Kronecker graphs naturally obey common network properties. We also provide empirical evidence showing that Kronecker graphs can effectively model the structure of real networks. We then present KronFit, a fast and scalable algorithm for fitting the Kronecker graph generation model to large real networks. A naive approach to fitting would take super- exponential time. In contrast, KronFit takes linear time, by exploiting the structure of Kronecker matrix multiplication and by using statistical simulation techniques. Experiments on large real and synthetic networks show that KronFit finds accurate parameters that indeed very well mimic the properties of target networks. Once fitted, the model parameters can be used to gain insights about the network structure, and the resulting synthetic graphs can be used for null- models, anonymization, extrapolations, and graph summarization.},
	urldate = {2021-03-02},
	journal = {arXiv:0812.4905 [physics, stat]},
	author = {Leskovec, Jure and Chakrabarti, Deepayan and Kleinberg, Jon and Faloutsos, Christos and Ghahramani, Zoubin},
	month = aug,
	year = {2009},
	note = {arXiv: 0812.4905},
	keywords = {Statistics - Machine Learning, Computer Science - Data Structures and Algorithms, Physics - Data Analysis, Statistics and Probability, Physics - Physics and Society},
	annote = {The classic Kronecker paper - generating synthetic graphs},
	file = {arXiv.org Snapshot:/Users/saranyav/Zotero/storage/QTXAKSYL/0812.html:text/html;arXiv Fulltext PDF:/Users/saranyav/Zotero/storage/PF3KEEMK/Leskovec et al. - 2009 - Kronecker Graphs An Approach to Modeling Networks.pdf:application/pdf},
}

@article{shah_many_2017,
	title = {The {Many} {Faces} of {Link} {Fraud}},
	url = {http://arxiv.org/abs/1704.01420},
	abstract = {Most past work on social network link fraud detection tries to separate genuine users from fraudsters, implicitly assuming that there is only one type of fraudulent behavior. But is this assumption true? And, in either case, what are the characteristics of such fraudulent behaviors? In this work, we set up honeypots ("dummy" social network accounts), and buy fake followers (after careful IRB approval). We report the signs of such behaviors including oddities in local network connectivity, account attributes, and similarities and differences across fraud providers. Most valuably, we discover and characterize several types of fraud behaviors. We discuss how to leverage our insights in practice by engineering strongly performing entropy-based features and demonstrating high classification accuracy. Our contributions are (a) instrumentation: we detail our experimental setup and carefully engineered data collection process to scrape Twitter data while respecting API rate-limits, (b) observations on fraud multimodality: we analyze our honeypot fraudster ecosystem and give surprising insights into the multifaceted behaviors of these fraudster types, and (c) features: we propose novel features that give strong ({\textgreater}0.95 precision/recall) discriminative power on ground-truth Twitter data.},
	urldate = {2021-11-13},
	journal = {arXiv:1704.01420 [cs]},
	author = {Shah, Neil and Lamba, Hemank and Beutel, Alex and Faloutsos, Christos},
	month = sep,
	year = {2017},
	note = {arXiv: 1704.01420},
	keywords = {Computer Science - Machine Learning, Computer Science - Social and Information Networks},
	annote = {Comment: "full" version of the ICDM2017 short paper, "The Many Faces of Link Fraud"},
	file = {arXiv.org Snapshot:/Users/saranyav/Zotero/storage/VEHBUETE/1704.html:text/html;arXiv Fulltext PDF:/Users/saranyav/Zotero/storage/YENASK6V/Shah et al. - 2017 - The Many Faces of Link Fraud.pdf:application/pdf},
}

@article{prakash_eigenspokes_nodate,
	title = {{EigenSpokes}: {Surprising} {Patterns} and {Scalable} {Community} {Chipping} in {Large} {Graphs}},
	abstract = {We report a surprising, persistent pattern in large sparse social graphs, which we term EigenSpokes. We focus on large Mobile Call graphs, spanning about 186K nodes and millions of calls, and ﬁnd that the singular vectors of these graphs exhibit a striking EigenSpokes pattern wherein, when plotted against each other, they have clear, separate lines that often neatly align along speciﬁc axes (hence the term “spokes”). Furthermore, analysis of several other real-world datasets e.g., Patent Citations, Internet, etc. reveals similar phenomena indicating this to be a more fundamental attribute of large sparse graphs that is related to their community structure.},
	language = {en},
	author = {Prakash, B Aditya and Sridharan, Ashwin and Seshadri, Mukund and Faloutsos, Christos},
	pages = {13},
	file = {Prakash et al. - EigenSpokes Surprising Patterns and Scalable Comm.pdf:/Users/saranyav/Zotero/storage/QT2KKYN9/Prakash et al. - EigenSpokes Surprising Patterns and Scalable Comm.pdf:application/pdf},
}

@article{hamilton_inductive_2018,
	title = {Inductive {Representation} {Learning} on {Large} {Graphs}},
	url = {http://arxiv.org/abs/1706.02216},
	abstract = {Low-dimensional embeddings of nodes in large graphs have proved extremely useful in a variety of prediction tasks, from content recommendation to identifying protein functions. However, most existing approaches require that all nodes in the graph are present during training of the embeddings; these previous approaches are inherently transductive and do not naturally generalize to unseen nodes. Here we present GraphSAGE, a general, inductive framework that leverages node feature information (e.g., text attributes) to efficiently generate node embeddings for previously unseen data. Instead of training individual embeddings for each node, we learn a function that generates embeddings by sampling and aggregating features from a node's local neighborhood. Our algorithm outperforms strong baselines on three inductive node-classification benchmarks: we classify the category of unseen nodes in evolving information graphs based on citation and Reddit post data, and we show that our algorithm generalizes to completely unseen graphs using a multi-graph dataset of protein-protein interactions.},
	urldate = {2021-11-13},
	journal = {arXiv:1706.02216 [cs, stat]},
	author = {Hamilton, William L. and Ying, Rex and Leskovec, Jure},
	month = sep,
	year = {2018},
	note = {arXiv: 1706.02216},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning, Computer Science - Social and Information Networks},
	annote = {Comment: Published in NIPS 2017; version with full appendix and minor corrections},
	file = {arXiv.org Snapshot:/Users/saranyav/Zotero/storage/78UM2XHP/1706.html:text/html;arXiv Fulltext PDF:/Users/saranyav/Zotero/storage/CFS7Q4RH/Hamilton et al. - 2018 - Inductive Representation Learning on Large Graphs.pdf:application/pdf},
}

@article{grosse_adversarial_2016,
	title = {Adversarial {Perturbations} {Against} {Deep} {Neural} {Networks} for {Malware} {Classification}},
	url = {http://arxiv.org/abs/1606.04435},
	abstract = {Deep neural networks, like many other machine learning models, have recently been shown to lack robustness against adversarially crafted inputs. These inputs are derived from regular inputs by minor yet carefully selected perturbations that deceive machine learning models into desired misclassifications. Existing work in this emerging field was largely specific to the domain of image classification, since the high-entropy of images can be conveniently manipulated without changing the images' overall visual appearance. Yet, it remains unclear how such attacks translate to more security-sensitive applications such as malware detection - which may pose significant challenges in sample generation and arguably grave consequences for failure. In this paper, we show how to construct highly-effective adversarial sample crafting attacks for neural networks used as malware classifiers. The application domain of malware classification introduces additional constraints in the adversarial sample crafting problem when compared to the computer vision domain: (i) continuous, differentiable input domains are replaced by discrete, often binary inputs; and (ii) the loose condition of leaving visual appearance unchanged is replaced by requiring equivalent functional behavior. We demonstrate the feasibility of these attacks on many different instances of malware classifiers that we trained using the DREBIN Android malware data set. We furthermore evaluate to which extent potential defensive mechanisms against adversarial crafting can be leveraged to the setting of malware classification. While feature reduction did not prove to have a positive impact, distillation and re-training on adversarially crafted samples show promising results.},
	urldate = {2021-11-13},
	journal = {arXiv:1606.04435 [cs]},
	author = {Grosse, Kathrin and Papernot, Nicolas and Manoharan, Praveen and Backes, Michael and McDaniel, Patrick},
	month = jun,
	year = {2016},
	note = {arXiv: 1606.04435},
	keywords = {Computer Science - Machine Learning, Computer Science - Cryptography and Security, Computer Science - Neural and Evolutionary Computing},
	annote = {Comment: version update: correcting typos, incorporating external feedback},
	file = {arXiv.org Snapshot:/Users/saranyav/Zotero/storage/FAM2V6RN/1606.html:text/html;arXiv Fulltext PDF:/Users/saranyav/Zotero/storage/ZF6EYWJ7/Grosse et al. - 2016 - Adversarial Perturbations Against Deep Neural Netw.pdf:application/pdf},
}

@inproceedings{jha_synthesizing_2013,
	address = {Fajardo, PR, USA},
	title = {Synthesizing near-optimal malware specifications from suspicious behaviors},
	isbn = {978-1-4799-2535-3 978-1-4799-2534-6},
	url = {http://ieeexplore.ieee.org/document/6703684/},
	doi = {10.1109/MALWARE.2013.6703684},
	urldate = {2021-11-13},
	booktitle = {2013 8th {International} {Conference} on {Malicious} and {Unwanted} {Software}: "{The} {Americas}" ({MALWARE})},
	publisher = {IEEE},
	author = {Jha, Somesh and Fredrikson, Matthew and Christodoresu, Mihai and Sailer, Reiner and Yan, Xifeng},
	month = oct,
	year = {2013},
	pages = {41--50},
}

@article{peikari_cluster-then-label_2018,
	title = {A {Cluster}-then-label {Semi}-supervised {Learning} {Approach} for {Pathology} {Image} {Classification}},
	volume = {8},
	issn = {2045-2322},
	doi = {10.1038/s41598-018-24876-0},
	abstract = {Completely labeled pathology datasets are often challenging and time-consuming to obtain. Semi-supervised learning (SSL) methods are able to learn from fewer labeled data points with the help of a large number of unlabeled data points. In this paper, we investigated the possibility of using clustering analysis to identify the underlying structure of the data space for SSL. A cluster-then-label method was proposed to identify high-density regions in the data space which were then used to help a supervised SVM in finding the decision boundary. We have compared our method with other supervised and semi-supervised state-of-the-art techniques using two different classification tasks applied to breast pathology datasets. We found that compared with other state-of-the-art supervised and semi-supervised methods, our SSL method is able to improve classification performance when a limited number of labeled data instances are made available. We also showed that it is important to examine the underlying distribution of the data space before applying SSL techniques to ensure semi-supervised learning assumptions are not violated by the data.},
	language = {eng},
	number = {1},
	journal = {Scientific Reports},
	author = {Peikari, Mohammad and Salama, Sherine and Nofech-Mozes, Sharon and Martel, Anne L.},
	month = may,
	year = {2018},
	pmid = {29739993},
	pmcid = {PMC5940864},
	pages = {7193},
	file = {Full Text:/Users/saranyav/Zotero/storage/I25U7XBF/Peikari et al. - 2018 - A Cluster-then-label Semi-supervised Learning Appr.pdf:application/pdf},
}

@inproceedings{yoon_fast_2019,
	address = {Anchorage AK USA},
	title = {Fast and {Accurate} {Anomaly} {Detection} in {Dynamic} {Graphs} with a {Two}-{Pronged} {Approach}},
	isbn = {978-1-4503-6201-6},
	url = {https://dl.acm.org/doi/10.1145/3292500.3330946},
	doi = {10.1145/3292500.3330946},
	language = {en},
	urldate = {2021-11-13},
	booktitle = {Proceedings of the 25th {ACM} {SIGKDD} {International} {Conference} on {Knowledge} {Discovery} \& {Data} {Mining}},
	publisher = {ACM},
	author = {Yoon, Minji and Hooi, Bryan and Shin, Kijung and Faloutsos, Christos},
	month = jul,
	year = {2019},
	pages = {647--657},
	file = {Full Text:/Users/saranyav/Zotero/storage/WTY9HG65/Yoon et al. - 2019 - Fast and Accurate Anomaly Detection in Dynamic Gra.pdf:application/pdf},
}

@article{preda_semantics-based_2007,
	title = {A semantics-based approach to malware detection},
	volume = {42},
	issn = {0362-1340, 1558-1160},
	url = {https://dl.acm.org/doi/10.1145/1190215.1190270},
	doi = {10.1145/1190215.1190270},
	abstract = {Malware detection is a crucial aspect of software security. Current malware detectors work by checking for "signatures," which attempt to capture (syntactic) characteristics of the machine-level byte sequence of the malware. This reliance on a syntactic approach makes such detectors vulnerable to code obfuscations, increasingly used by malware writers, that alter syntactic properties of the malware byte sequence without significantly affecting their execution behavior.This paper takes the position that the key to malware identification lies in their semantics. It proposes a semantics-based framework for reasoning about malware detectors and proving properties such as soundness and completeness of these detectors. Our approach uses a trace semantics to characterize the behaviors of malware as well as the program being checked for infection, and uses abstract interpretation to "hide" irrelevant aspects of these behaviors. As a concrete application of our approach, we show that the semantics-aware malware detector proposed by Christodorescu
              et al.
              is complete with respect to a number of common obfuscations used by malware writers.},
	language = {en},
	number = {1},
	urldate = {2021-11-13},
	journal = {ACM SIGPLAN Notices},
	author = {Preda, Mila Dalla and Christodorescu, Mihai and Jha, Somesh and Debray, Saumya},
	month = jan,
	year = {2007},
	pages = {377--388},
}

@incollection{frasconi_m-zoom_2016,
	address = {Cham},
	title = {M-{Zoom}: {Fast} {Dense}-{Block} {Detection} in {Tensors} with {Quality} {Guarantees}},
	volume = {9851},
	isbn = {978-3-319-46127-4 978-3-319-46128-1},
	shorttitle = {M-{Zoom}},
	url = {https://link.springer.com/10.1007/978-3-319-46128-1_17},
	language = {en},
	urldate = {2021-11-14},
	booktitle = {Machine {Learning} and {Knowledge} {Discovery} in {Databases}},
	publisher = {Springer International Publishing},
	author = {Shin, Kijung and Hooi, Bryan and Faloutsos, Christos},
	editor = {Frasconi, Paolo and Landwehr, Niels and Manco, Giuseppe and Vreeken, Jilles},
	year = {2016},
	doi = {10.1007/978-3-319-46128-1_17},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {264--280},
}

@article{wadkar2020detecting,
  title={Detecting malware evolution using support vector machines},
  author={Wadkar, Mayuri and Di Troia, Fabio and Stamp, Mark},
  journal={Expert Systems with Applications},
  volume={143},
  pages={113022},
  year={2020},
  publisher={Elsevier}
}

@article{hsiao2019malware,
  title={Malware image classification using one-shot learning with siamese networks},
  author={Hsiao, Shou-Ching and Kao, Da-Yu and Liu, Zi-Yuan and Tso, Raylin},
  journal={Procedia Computer Science},
  volume={159},
  pages={1863--1871},
  year={2019},
  publisher={Elsevier}
}

@incollection{spencer2022dissecting,
  title={Dissecting Malware in the Wild},
  author={Spencer, Hamish and Wang, Wei and Sun, Ruoxi and Xue, Minhui},
  booktitle={Australasian Computer Science Week 2022},
  pages={56--64},
  year={2022}
}

@inproceedings{kolosnjaji2016adaptive,
  title={Adaptive semantics-aware malware classification},
  author={Kolosnjaji, Bojan and Zarras, Apostolis and Lengyel, Tamas and Webster, George and Eckert, Claudia},
  booktitle={Detection of Intrusions and Malware, and Vulnerability Assessment: 13th International Conference, DIMVA 2016, San Sebasti{\'a}n, Spain, July 7-8, 2016, Proceedings 13},
  pages={419--439},
  year={2016},
  organization={Springer}
}

@article{raff2017malware,
  title={Malware detection by eating a whole exe},
  author={Raff, Edward and Barker, Jon and Sylvester, Jared and Brandon, Robert and Catanzaro, Bryan and Nicholas, Charles},
  journal={arXiv preprint arXiv:1710.09435},
  year={2017}
}

@inproceedings{nataraj2011malware,
  title={Malware images: visualization and automatic classification},
  author={Nataraj, Lakshmanan and Karthikeyan, Sreejith and Jacob, Gregoire and Manjunath, Bangalore S},
  booktitle={Proceedings of the 8th international symposium on visualization for cyber security},
  pages={1--7},
  year={2011}
}

@inproceedings{kolosnjaji2018adversarial,
  title={Adversarial malware binaries: Evading deep learning for malware detection in executables},
  author={Kolosnjaji, Bojan and Demontis, Ambra and Biggio, Battista and Maiorca, Davide and Giacinto, Giorgio and Eckert, Claudia and Roli, Fabio},
  booktitle={2018 26th European signal processing conference (EUSIPCO)},
  pages={533--537},
  year={2018},
  organization={IEEE}
}

@inproceedings{hu2023generating,
  title={Generating adversarial malware examples for black-box attacks based on GAN},
  author={Hu, Weiwei and Tan, Ying},
  booktitle={Data Mining and Big Data: 7th International Conference, DMBD 2022, Beijing, China, November 21--24, 2022, Proceedings, Part II},
  pages={409--423},
  year={2023},
  organization={Springer}
}

@inproceedings{suciu2019exploring,
  title={Exploring adversarial examples in malware detection},
  author={Suciu, Octavian and Coull, Scott E and Johns, Jeffrey},
  booktitle={2019 IEEE Security and Privacy Workshops (SPW)},
  pages={8--14},
  year={2019},
  organization={IEEE}
}

@article{demetrio2021adversarial,
  title={Adversarial exemples: A survey and experimental evaluation of practical attacks on machine learning for windows malware detection},
  author={Demetrio, Luca and Coull, Scott E and Biggio, Battista and Lagorio, Giovanni and Armando, Alessandro and Roli, Fabio},
  journal={ACM Transactions on Privacy and Security (TOPS)},
  volume={24},
  number={4},
  pages={1--31},
  year={2021},
  publisher={ACM New York, NY, USA}
}

@article{grosse2016adversarial,
  title={Adversarial perturbations against deep neural networks for malware classification},
  author={Grosse, Kathrin and Papernot, Nicolas and Manoharan, Praveen and Backes, Michael and McDaniel, Patrick},
  journal={arXiv preprint arXiv:1606.04435},
  year={2016}
}

@article{goodfellow2014explaining,
  title={Explaining and harnessing adversarial examples},
  author={Goodfellow, Ian J and Shlens, Jonathon and Szegedy, Christian},
  journal={arXiv preprint arXiv:1412.6572},
  year={2014}
}

@misc{agarap2020pytorch,
  author       = "Abien Fred Agarap",
  title        = "{PyTorch} datasets",
  howpublished = "\url{https://github.com/afagarap/pt-datasets}",
  note         = "Accessed: 20xx-xx-xx"
}

@article{vinayakumar2019robust,
  title={Robust intelligent malware detection using deep learning},
  author={Vinayakumar, R and Alazab, Mamoun and Soman, KP and Poornachandran, Prabaharan and Venkatraman, Sitalakshmi},
  journal={IEEE Access},
  volume={7},
  pages={46717--46738},
  year={2019},
  publisher={IEEE}
}


@article{kargarnovin2021mal2gcn,
  title={Mal2GCN: A Robust Malware Detection Approach Using Deep Graph Convolutional Networks With Non-Negative Weights},
  author={Kargarnovin, Omid and Sadeghzadeh, Amir Mahdi and Jalili, Rasool},
  journal={arXiv preprint arXiv:2108.12473},
  year={2021}
}

@inproceedings{park2019generation,
  title={Generation \& evaluation of adversarial examples for malware obfuscation},
  author={Park, Daniel and Khan, Haidar and Yener, B{\"u}lent},
  booktitle={2019 18th IEEE International Conference On Machine Learning And Applications (ICMLA)},
  pages={1283--1290},
  year={2019},
  organization={IEEE}
}

@inproceedings{huang2019malware,
  title={Malware evasion attack and defense},
  author={Huang, Yonghong and Verma, Utkarsh and Fralick, Celeste and Infantec-Lopez, Gabriel and Kumar, Brajesh and Woodward, Carl},
  booktitle={2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)},
  pages={34--38},
  year={2019},
  organization={IEEE}
}

@inproceedings{kolosnjaji2018adversarial,
  title={Adversarial malware binaries: Evading deep learning for malware detection in executables},
  author={Kolosnjaji, Bojan and Demontis, Ambra and Biggio, Battista and Maiorca, Davide and Giacinto, Giorgio and Eckert, Claudia and Roli, Fabio},
  booktitle={2018 26th European signal processing conference (EUSIPCO)},
  pages={533--537},
  year={2018},
  organization={IEEE}
}

@article{chen2019adversarial,
  title={Adversarial examples for cnn-based malware detectors},
  author={Chen, Bingcai and Ren, Zhongru and Yu, Chao and Hussain, Iftikhar and Liu, Jintao},
  journal={IEEE Access},
  volume={7},
  pages={54360--54371},
  year={2019},
  publisher={IEEE}
}

@inproceedings{papernot2016distillation,
  title={Distillation as a defense to adversarial perturbations against deep neural networks},
  author={Papernot, Nicolas and McDaniel, Patrick and Wu, Xi and Jha, Somesh and Swami, Ananthram},
  booktitle={2016 IEEE symposium on security and privacy (SP)},
  pages={582--597},
  year={2016},
  organization={IEEE}
}